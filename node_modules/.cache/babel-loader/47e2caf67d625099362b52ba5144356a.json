{"ast":null,"code":"var _jsxFileName = \"D:\\\\webprojects\\\\react\\\\ecom\\\\two\\\\src\\\\user\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\nconst Profile = props => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success\n  } = values;\n  const {\n    token\n  } = isAuthenticated();\n\n  // Get user info from backend and set it to values state\n  const init = userId => {\n    console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues({\n          ...values,\n          error: true\n        });\n      } else {\n        setValues({\n          ...values,\n          name: data.name,\n          email: data.email\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    init(props.match.params.userId);\n  }, []);\n\n  // Update the values state with values from the event\n  // handleChange is a HOF that returns another function\n  // The value we pass in for name is either name, email, or password\n  // On handleChange, we want to update the values state\n  // The value for [name] is dynamically generated depending on where it's coming from\n  const handleChange = name => e => {\n    setValues({\n      ...values,\n      error: false,\n      [name]: e.target.value\n    });\n  };\n\n  // Send user data to backend to update user info\n  const clickSubmit = e => {\n    e.preventDefault();\n    update(props.match.params.userId, token, {\n      name,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        // If success, update user info in localStorage and set success state to true\n        updateUser(data, () => {\n          setValues({\n            ...values,\n            name: data.name,\n            email: data.email,\n            success: true\n          });\n        });\n      }\n    });\n  };\n  const redirectUser = success => {\n    if (success) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n\n  // Create a form so user can update their profile\n  const profileUpdate = (name, email, password) => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange('name'),\n    value: name,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange('email'),\n    value: email,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange('password'),\n    value: password,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Profile\",\n    description: \"Update your profile\",\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }\n  }, \"Profile update\"), profileUpdate(name, email, password), redirectUser(success));\n};\nexport default Profile;","map":{"version":3,"names":["React","useState","useEffect","Layout","isAuthenticated","Link","Redirect","read","update","updateUser","Profile","props","values","setValues","name","email","password","error","success","token","init","userId","console","log","then","data","match","params","handleChange","e","target","value","clickSubmit","preventDefault","redirectUser","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","profileUpdate","className","type","onChange","onClick","title","description"],"sources":["D:/webprojects/react/ecom/two/src/user/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = (props) => {\r\n\tconst [values, setValues] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\terror: false,\r\n\t\tsuccess: false\r\n\t});\r\n\r\n\tconst { name, email, password, error, success } = values;\r\n\tconst { token } = isAuthenticated();\r\n\r\n  // Get user info from backend and set it to values state\r\n\tconst init = (userId) => {\r\n\t\tconsole.log(userId);\r\n\t\tread(userId, token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: true });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tname: data.name,\r\n\t\t\t\t\temail: data.email\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tinit(props.match.params.userId);\r\n\t}, []);\r\n\r\n\t// Update the values state with values from the event\r\n\t// handleChange is a HOF that returns another function\r\n\t// The value we pass in for name is either name, email, or password\r\n\t// On handleChange, we want to update the values state\r\n\t// The value for [name] is dynamically generated depending on where it's coming from\r\n\tconst handleChange = (name) => (e) => {\r\n\t\tsetValues({ ...values, error: false, [name]: e.target.value });\r\n\t};\r\n\r\n  // Send user data to backend to update user info\r\n\tconst clickSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tupdate(props.match.params.userId, token, { name, email, password }).then(\r\n\t\t\t(data) => {\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tconsole.log(data.error);\r\n        } else {\r\n          // If success, update user info in localStorage and set success state to true\r\n\t\t\t\t\tupdateUser(data, () => {\r\n\t\t\t\t\t\tsetValues({\r\n\t\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\t\tname: data.name,\r\n\t\t\t\t\t\t\temail: data.email,\r\n\t\t\t\t\t\t\tsuccess: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tconst redirectUser = (success) => {\r\n\t\tif (success) {\r\n\t\t\treturn <Redirect to='/cart' />;\r\n\t\t}\r\n\t};\r\n\r\n  // Create a form so user can update their profile\r\n\tconst profileUpdate = (name, email, password) => (\r\n\t\t<form>\r\n\t\t\t<div className='form-group'>\r\n\t\t\t\t<label className='text-muted'>Name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tonChange={handleChange('name')}\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='form-group'>\r\n\t\t\t\t<label className='text-muted'>Email</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tonChange={handleChange('email')}\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='form-group'>\r\n\t\t\t\t<label className='text-muted'>Password</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tonChange={handleChange('password')}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<button onClick={clickSubmit} className='btn btn-primary'>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\ttitle='Profile'\r\n\t\t\tdescription='Update your profile'\r\n\t\t\tclassName='container-fluid'\r\n\t\t>\r\n\t\t\t<h2 className='mb-4'>Profile update</h2>\r\n      {profileUpdate(name, email, password)}\r\n      {redirectUser(success)}\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}