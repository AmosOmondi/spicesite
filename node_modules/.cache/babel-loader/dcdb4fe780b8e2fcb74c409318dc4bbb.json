{"ast":null,"code":"import { API } from '../config';\n\n// Send the data to backend to create a new category\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\n// Send the data to backend to create a new product\n// The product we're sending is the form data\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\n// Get categories from backend\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n// Get orders from backend\nexport const listOrders = (userId, token) => {\n  return fetch(`${API}/order/list/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n// Get enum status values from backend\nexport const getStatusValues = (userId, token) => {\n  return fetch(`${API}/order/status-values/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n// Send the order id and status to update order status in backend\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(`${API}/order/${orderId}/status/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n/**\r\n * To perform CRUD on product\r\n * - get all products\r\n * - get a single product\r\n * - update a single product\r\n * - delete a single product\r\n */\n\n// Get products from backend\nexport const getProducts = () => {\n  return fetch(`${API}/products?limit='undefined'`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n// Delete a product in backend\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n// Get a single product from backend\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n// Update a single product in backend\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","createProduct","product","getCategories","listOrders","getStatusValues","updateOrderStatus","orderId","status","getProducts","deleteProduct","productId","getProduct","updateProduct"],"sources":["D:/webprojects/react/ecom/two/src/admin/apiAdmin.js"],"sourcesContent":["import { API } from '../config';\r\n\r\n// Send the data to backend to create a new category\r\nexport const createCategory = (userId, token, category) => {\r\n\treturn fetch(`${API}/category/create/${userId}`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify(category)\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n};\r\n\r\n// Send the data to backend to create a new product\r\n// The product we're sending is the form data\r\nexport const createProduct = (userId, token, product) => {\r\n\treturn fetch(`${API}/product/create/${userId}`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: product\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n};\r\n\r\n// Get categories from backend\r\nexport const getCategories = () => {\r\n\treturn fetch(`${API}/categories`, {\r\n\t\tmethod: 'GET'\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// Get orders from backend\r\nexport const listOrders = (userId, token) => {\r\n\treturn fetch(`${API}/order/list/${userId}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// Get enum status values from backend\r\nexport const getStatusValues = (userId, token) => {\r\n\treturn fetch(`${API}/order/status-values/${userId}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// Send the order id and status to update order status in backend\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n\treturn fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({ status, orderId })\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n/**\r\n * To perform CRUD on product\r\n * - get all products\r\n * - get a single product\r\n * - update a single product\r\n * - delete a single product\r\n */\r\n\r\n// Get products from backend\r\nexport const getProducts = () => {\r\n\treturn fetch(`${API}/products?limit='undefined'`, {\r\n\t\tmethod: 'GET'\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// Delete a product in backend\r\nexport const deleteProduct = (productId, userId, token) => {\r\n\treturn fetch(`${API}/product/${productId}/${userId}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// Get a single product from backend\r\nexport const getProduct = (productId) => {\r\n\treturn fetch(`${API}/product/${productId}`, {\r\n\t\tmethod: 'GET'\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// Update a single product in backend\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n\treturn fetch(`${API}/product/${productId}/${userId}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: product\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}